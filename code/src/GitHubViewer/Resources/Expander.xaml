<!--
 * MIT License
 * 
 * Copyright (c) 2019 plexdata.de
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 -->

<ResourceDictionary 
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!-- 
    An Expander with template does not open in designer mode! This is 
    because of a bug in VS2010. For more information see link below: 
    http://social.msdn.microsoft.com/Forums/en-US/08666d67-87aa-42c2-91b5-6b3e6b9c7272/expander-doesnt-show-content-at-design-time-in-visual-studio-2010 
    -->

    <!-- Expander: Button style definition. -->
    <ControlTemplate 
        x:Key="NiceExpanderButton"
        TargetType="{x:Type ToggleButton}">
        <Border 
            x:Name="ButtonBorder"
            Background="{StaticResource DefaultHeaderBrush}"
            BorderBrush="{StaticResource DefaultBorderBrush}"
            BorderThickness="1"
            Padding="7,3,7,3"
            CornerRadius="3,3,0,0">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <ContentPresenter 
                    x:Name="HeaderContent"
                    Grid.Column="0"
                    Margin="0"
                    VerticalAlignment="Center"
                    HorizontalAlignment="Stretch"
                    ContentSource="Content">
                    <ContentPresenter.ContentTemplate>
                        <DataTemplate>
                            <TextBlock 
                                Text="{Binding}" 
                                FontWeight="DemiBold"
                                TextTrimming="CharacterEllipsis"/>
                        </DataTemplate>
                    </ContentPresenter.ContentTemplate>
                </ContentPresenter>
                <Path 
                    x:Name="ButtonArrow"
                    Grid.Column="1"
                    Data="M 1,1.5 L 4.5,5 8,1.5"
                    Stroke="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Foreground}"
                    StrokeThickness="2"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"/>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger 
                Property="IsMouseOver" 
                Value="True">
                <Setter 
                    TargetName="ButtonBorder" 
                    Property="Background" 
                    Value="{StaticResource HighlightControlBrush}"/>
                <Setter 
                    TargetName="ButtonBorder" 
                    Property="BorderBrush" 
                    Value="{StaticResource HighlightBorderBrush}"/>
            </Trigger>
            <Trigger 
                Property="IsPressed" 
                Value="True">
                <Setter 
                    TargetName="ButtonBorder" 
                    Property="Background" 
                    Value="{StaticResource ClickedControlBrush}"/>
                <Setter 
                    TargetName="ButtonBorder" 
                    Property="BorderBrush" 
                    Value="{StaticResource ClickedBorderBrush}"/>
            </Trigger>
            <Trigger 
                Property="IsChecked" 
                Value="True">
                <Setter 
                    TargetName="ButtonArrow" 
                    Property="Data" 
                    Value="M 1,5 L 4.5,1.5 8,5"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- Expander: Template style definition. -->
    <ControlTemplate 
        x:Key="NiceExpanderTemplate"
        TargetType="{x:Type Expander}">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <ToggleButton 
                x:Name="HeaderButton"
                Grid.Row="0"
                OverridesDefaultStyle="True"
                Template="{StaticResource NiceExpanderButton}"
                Content="{TemplateBinding Header}"
                IsChecked="{Binding Path=IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"/>
            <Border 
                x:Name="ContentBorder"
                Grid.Row="1"
                Padding="5"
                Margin="0,0,0,3"
                CornerRadius="0,0,3,3"
                BorderThickness="1,0,1,1"
                BorderBrush="{StaticResource DefaultBorderBrush}"
                Background="{StaticResource DefaultControlBrush}">
                <ContentPresenter 
                    x:Name="ContentValue"
                    Visibility="Collapsed"/>
            </Border>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger 
                Property="IsExpanded" 
                Value="True">
                <Setter 
                    TargetName="ContentValue" 
                    Property="Visibility" 
                    Value="Visible"/>
            </Trigger>
            <Trigger 
                Property="IsExpanded" 
                Value="False">
                <Setter 
                    TargetName="ContentBorder" 
                    Property="BorderThickness" 
                    Value="0"/>
                <Setter 
                    TargetName="ContentBorder" 
                    Property="CornerRadius" 
                    Value="0"/>
                <Setter 
                    TargetName="ContentBorder" 
                    Property="Padding" 
                    Value="0"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

</ResourceDictionary>