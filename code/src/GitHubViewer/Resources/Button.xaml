<!--
 * MIT License
 * 
 * Copyright (c) 2019 plexdata.de
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 -->

<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <Style TargetType="{x:Type Button}" x:Key="PagingButtonBase">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Background" Value="#FFFFFF"/>
        <Setter Property="Foreground" Value="{StaticResource PagingButtonStandardBrush}"/>
        <Setter Property="Width" Value="30"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="Padding" Value="5"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource PagingButtonHighlightBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="PagingNumberButton" BasedOn="{StaticResource PagingButtonBase}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border 
                        x:Name="PagingNumberButtonBorder"
                        Background="{TemplateBinding Background}" 
                        CornerRadius="0"
                        BorderThickness="1"
                        Padding="5"
                        BorderBrush="{StaticResource DefaultBorderBrush}">
                        <ContentPresenter 
                            Content="{TemplateBinding Content}"
                            HorizontalAlignment="Center" 
                            VerticalAlignment="Center">
                            <ContentPresenter.RenderTransformOrigin>
                                <Point X="0.5" Y="0.5"/>
                            </ContentPresenter.RenderTransformOrigin>
                            <ContentPresenter.RenderTransform>
                                <ScaleTransform ScaleX="1.3" ScaleY="1.3" />
                            </ContentPresenter.RenderTransform>
                        </ContentPresenter>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="PagingNumberButtonBorder" Property="BorderBrush" Value="{StaticResource PagingButtonStandardBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="{StaticResource PagingButtonStandardBrush}"/>
                            <Setter Property="Foreground" Value="White"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="DoubleLeftArrowButton" BasedOn="{StaticResource PagingButtonBase}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border 
                        Background="{TemplateBinding Background}" 
                        Padding="5"
                        CornerRadius="5, 0, 0, 5"
                        BorderThickness="1"
                        BorderBrush="{StaticResource DefaultBorderBrush}">
                        <Path
                            Data="m 12 0 l -4 0 l -8 10 l 8 10 l 4 0 l -8 -10 l 8 -10 m 8 0 l -4 0 l -8 10 l 8 10 l 4 0 l -8 -10 l 8 -10"
                            Fill="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Foreground}"
                            Stretch="Uniform"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center">
                            <Path.RenderTransformOrigin>
                                <Point X="0.5" Y="0.5"/>
                            </Path.RenderTransformOrigin>
                            <Path.RenderTransform>
                                <ScaleTransform ScaleX="0.6" ScaleY="0.6" />
                            </Path.RenderTransform>
                        </Path>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{StaticResource DefaultBorderBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="SingleLeftArrowButton" BasedOn="{StaticResource PagingButtonBase}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border 
                        Background="{TemplateBinding Background}" 
                        CornerRadius="0"
                        BorderThickness="1"
                        Padding="5"
                        BorderBrush="{StaticResource DefaultBorderBrush}">
                        <Path
                            Data="m 12 0 l -4 0 l -8 10 l 8 10 l 4 0 l -8 -10 l 8 -10"
                            Fill="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Foreground}"
                            Stretch="Uniform"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center">
                            <Path.RenderTransformOrigin>
                                <Point X="0.5" Y="0.5"/>
                            </Path.RenderTransformOrigin>
                            <Path.RenderTransform>
                                <ScaleTransform ScaleX="0.6" ScaleY="0.6" />
                            </Path.RenderTransform>
                        </Path>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{StaticResource DefaultBorderBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="DoubleRightArrowButton" BasedOn="{StaticResource PagingButtonBase}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border 
                        Background="{TemplateBinding Background}" 
                        CornerRadius="0,5,5,0"
                        BorderThickness="1"
                        Padding="5"
                        BorderBrush="{StaticResource DefaultBorderBrush}">
                        <Path
                            Data="m 0 0 l 4 0 l 8 10 l -8 10 l -4 0 l 8 -10 z m 8 0 l 4 0 l 8 10 l -8 10 l -4 0 l 8 -10 z"
                            Fill="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Foreground}"
                            Stretch="Uniform"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center">
                            <Path.RenderTransformOrigin>
                                <Point X="0.5" Y="0.5"/>
                            </Path.RenderTransformOrigin>
                            <Path.RenderTransform>
                                <ScaleTransform ScaleX="0.6" ScaleY="0.6" />
                            </Path.RenderTransform>
                        </Path>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{StaticResource DefaultBorderBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="SingleRightArrowButton" BasedOn="{StaticResource PagingButtonBase}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border 
                        Background="{TemplateBinding Background}" 
                        CornerRadius="0"
                        BorderThickness="1"
                        Padding="5"
                        BorderBrush="{StaticResource DefaultBorderBrush}">
                        <Path
                            Data="m 0 0 l 4 0 l 8 10 l -8 10 l -4 0 l 8 -10 z"
                            Fill="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Foreground}"
                            Stretch="Uniform"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center">
                            <Path.RenderTransformOrigin>
                                <Point X="0.5" Y="0.5"/>
                            </Path.RenderTransformOrigin>
                            <Path.RenderTransform>
                                <ScaleTransform ScaleX="0.6" ScaleY="0.6" />
                            </Path.RenderTransform>
                        </Path>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{StaticResource DefaultBorderBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="StandardButton">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Background" Value="{StaticResource DefaultButtonBrush}"/>
        <Setter Property="Padding" Value="5"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border 
                        Background="{TemplateBinding Background}" 
                        CornerRadius="0"
                        BorderThickness="1"
                        Padding="5,4,5,5"
                        BorderBrush="{StaticResource DefaultBorderBrush}">
                        <ContentPresenter 
                            Content="{TemplateBinding Content}"
                            RecognizesAccessKey="True"
                            HorizontalAlignment="Center" 
                            VerticalAlignment="Center">
                        </ContentPresenter>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource FocusButtonBrush}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{StaticResource PressedButtonBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type ToggleButton}" x:Key="TripleDotsDropDownButton">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Width" Value="30"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="Padding" Value="5"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border 
                        x:Name="TripleDotsButtonBorder"
                        Background="{TemplateBinding Background}" 
                        Padding="6"
                        CornerRadius="0"
                        BorderThickness="0"
                        BorderBrush="{StaticResource DefaultBorderBrush}">
                        <Path
                            Stretch="Uniform"
                            Fill="#BFBFBF">
                            <Path.Data>
                                <GeometryGroup>
                                    <EllipseGeometry Center="14,14" RadiusX="14" RadiusY="14" />
                                    <EllipseGeometry Center="14,54" RadiusX="14" RadiusY="14" />
                                    <EllipseGeometry Center="14,94" RadiusX="14" RadiusY="14" />
                                </GeometryGroup>
                            </Path.Data>
                        </Path>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="TripleDotsButtonBorder" Property="Background" Value="#F2F2F2"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="TripleDotsButtonBorder" Property="Background" Value="#EAEAEA"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="TripleDotsButtonBorder" Property="Background" Value="#F2F2F2"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>